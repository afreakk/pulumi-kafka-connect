name: release
on:
  push:
    tags:
      - v*.*.*
      - "!v*.*.*-**"
permissions:
  contents: write
env:
  PROVIDER: "kafka-connect"
  # THIS GITHUB_TOKEN IS A REQUIREMENT TO BE ABLE TO WRITE TO GH RELEASES
  GITHUB_TOKEN: ${{ secrets.REPO_RELEASE_TOKEN }}
  # IF YOU NEED TO PUBLISH A NPM PACKAGE THEN ENSURE A NPM_TOKEN SECRET IS SET
  # AND PUBLISH_NPM: TRUE. IF YOU WANT TO PUBLISH TO A PRIVATE NPM REGISTRY
  # THEN ENSURE THE NPM_REGISTRY_URL IS CHANGED
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  PUBLISH_NPM: true
  NPM_REGISTRY_URL: https://registry.npmjs.org
  # IF YOU NEED TO PUBLISH A NUGET PACKAGE THEN ENSURE AN NUGET_PUBLISH_KEY
  # SECRET IS SET AND PUBLISH_NUGET: TRUE. IF YOU WANT TO PUBLISH TO AN ALTERNATIVE
  # NPM REGISTRY THEN ENSURE THE NPM_REGISTRY_URL IS CHANGED
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PUBLISH_NUGET: false
  # IF YOU NEED TO PUBLISH A PYPI PACKAGE THEN ENSURE AN PYPI_API_TOKEN
  # SECRET IS SET AND PUBLISH_PYPI: TRUE. IF YOU WANT TO PUBLISH TO AN ALTERNATIVE
  # PYPI REGISTRY THEN ENSURE THE PYPI_REPOSITORY_URL IS SET. IF YOU ARE USING AN API_TOKEN THEN
  # YOU DO NOT NEED TO CHANGE THE PYPI_USERNAME (__token__) , IF YOU ARE USING PASSWORD AUTHENTICATION THEN YOU WILL
  # NEED TO CHANGE TO USE THE CORRECT PASSWORD
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  PYPI_USERNAME: "azaurus1"
  PYPI_REPOSITORY_URL: "kafka_connect_pulumi"
  PUBLISH_PYPI: true
jobs:
  publish_binary:
    name: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.goversion}}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Set PreRelease Version
        run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV
      # - uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0
      - uses: anchore/sbom-action/download-syft@7ccf588e3cf3cc2611714c2eeae48550fbc17552 # v0.15.11
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8
        with:
          args: -p 3 release --clean
          version: 2
    strategy:
      fail-fast: true
      matrix:
        goversion:
          - 1.21.x
  publish_sdk:
    name: Publish SDKs
    runs-on: ubuntu-latest
    needs: publish_binary
    steps:
    - name: Checkout Repo
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # tag=v4.1.4
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # tag=v5.0.0
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@71d17cb091aa850acb2a1a4cf87258d183eb941b # tag=v1.11.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@b374ceb6168550de27c6eba92e01c1a774040e11 # tag=v2.0.0
    - name: Setup Node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # tag=v4.0.2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: ${{env.NPM_REGISTRY_URL}}
    - name: Setup DotNet
      uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # tag=v2.1.0
      with:
        dotnet-version: ${{matrix.dotnetverson}}
    - name: Setup Python
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # tag=v5.1.0
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Debug Working Directory and Bin Directory
      run: |
        echo "Listing the working directory:"
        ls -l
        echo "Listing the bin directory:"
        ls -l bin/
    - name: Build SDK
      run: make ${{ matrix.language }}_sdk
    - name: Check worktree clean
      run: |
        git update-index -q --refresh
        if ! git diff-files --quiet; then
            >&2 echo "error: working tree is not clean, aborting!"
            git status
            git diff
            exit 1
        fi
    - if: ${{ matrix.language == 'python' && env.PUBLISH_PYPI == 'true' }}
      name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # tag=v1.8.14
      with:
        user: ${{ env.PYPI_USERNAME }}
        password: ${{ env.PYPI_PASSWORD }}
        packages_dir: ${{github.workspace}}/sdk/python/bin/dist
    - if: ${{ matrix.language == 'nodejs' && env.PUBLISH_NPM == 'true' }}
      uses: JS-DevTools/npm-publish@19c28f1ef146469e409470805ea4279d47c3d35c # tag=v3.1.1
      with:
        access: "public"
        token: ${{ env.NPM_TOKEN }}
        package: ${{github.workspace}}/sdk/nodejs/bin/package.json
        provenance: true
    - if: ${{ matrix.language == 'dotnet' && env.PUBLISH_NUGET == 'true' }}
      name: publish nuget package
      run: |
        dotnet nuget push ${{github.workspace}}/sdk/dotnet/bin/Debug/*.nupkg -s ${{ env.NUGET_FEED_URL }} -k ${{ env.NUGET_PUBLISH_KEY }}
        echo "done publishing packages"
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
        - 3.1.301
        goversion:
        - 1.21.x
        language:
        - nodejs
        - python
        - dotnet
        # - go
        nodeversion:
        - 18.x
        pythonversion:
        - "3.9"
